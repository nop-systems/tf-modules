# yaml-language-server: $schema=https://raw.githubusercontent.com/Relativ-IT/Butane-Schemas/Release/Butane-Schema.json
variant: fcos
version: "1.5.0"
storage:
  directories:
    - path: /etc/nextcloud
    - path: /var/containers/nextcloud/data
    - path: /var/containers/nextcloud/html
    - path: /var/containers/postgres/data
    - path: /var/containers/valkey/data
    - path: /var/containers/secrets/nextcloud
    - path: /var/containers/secrets/nextcloud/postgres
  files:
    - path: /etc/nextcloud/nextcloud.env
      mode: 0644
      contents:
        inline: |
          NC_default_phone_region=DE
          NC_maintenance_window_start=2
          NC_trashbin_retention_obligation='auto, 90'
          NEXTCLOUD_ADMIN_PASSWORD_FILE=/secrets/nextcloud_admin_password
          NEXTCLOUD_ADMIN_USER=admin
          NEXTCLOUD_DATA_DIR=/data
          NEXTCLOUD_TRUSTED_DOMAINS=${nextcloud_public_fqdn} ${nextcloud_service_fqdn} ${fqdn}
          OVERWRITECLIURL=${nextcloud_service_fqdn}
          PHP_MEMORY_LIMIT=${php_memory_limit}
          PHP_UPLOAD_LIMIT=${php_upload_limit}
          POSTGRES_DB_FILE=/secrets/postgres/db
          POSTGRES_HOST=systemd-postgres
          POSTGRES_PASSWORD_FILE=/secrets/postgres/password
          POSTGRES_USER_FILE=/secrets/postgres/user
          REDIS_HOST=systemd-valkey
          # REDIS_PASSWORD_FILE=/secrets/redis_password
          TRUSTED_PROXIES=0.0.0.0/0 ::/0
          TZ='Europe/Berlin'
    - path: /etc/nextcloud/php-custom-config.ini
      mode: 0644
      contents:
        inline: |
          opcache.memory_consumption=256
    - path: /etc/nextcloud/custom.config.php
      mode: 0644
      contents:
        inline: |
          <?php
            $CONFIG = array (
              'enabledPreviewProviders' => [
                  'OC\Preview\MP3',
                  'OC\Preview\TXT',
                  'OC\Preview\MarkDown',
                  'OC\Preview\OpenDocument',
                  'OC\Preview\Krita',
                  'OC\Preview\Imaginary',
              ],
              'preview_imaginary_url' => 'http://systemd-imaginary:9000/',
              'preview_format' => 'webp',
            );
    - path: /etc/containers/systemd/nextcloud.image
      mode: 0644
      contents:
        inline: |
          [Unit]
          Wants=network-online.target
          After=network-online.target

          [Image]
          Image=docker.io/library/nextcloud:${nextcloud_fpm_version}
    - path: /etc/containers/systemd/nextcloud.pod
      mode: 0644
      contents:
        inline: |
          [Unit]
          Wants=postgres.service
          Wants=valkey.service

          [Pod]
          Network=container.network
          Network=clamav.network
          PodmanArgs=--userns=auto --exit-policy=continue

          Volume=/var/containers/nextcloud/html:/var/www/html:z,idmap
          Volume=/var/containers/nextcloud/data:/data:Z,U
          Volume=/vault/secrets/nextcloud/:/secrets:z,idmap,ro
          Volume=/etc/nextcloud/php-custom-config.ini:/usr/local/etc/php/conf.d/zz-custom-config.ini:z,idmap,ro
          Volume=/etc/nextcloud/custom.config.php:/var/www/html/config/custom.config.php:z,idmap,ro
    - path: /etc/containers/systemd/nextcloud-app.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=nextcloud app
          After=network-online.target local-fs.target vault-agent.service
          Wants=postgres.service valkey.service imaginary.service

          [Container]
          Image=nextcloud.image
          Pull=newer
          LogDriver=journald

          EnvironmentFile=/etc/nextcloud/nextcloud.env
          Volume=/var/containers/secrets/nextcloud:/secrets:z,idmap,ro

          Pod=nextcloud.pod

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/containers/systemd/nextcloud-cron.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=nextcloud cron
          After=network-online.target local-fs.target vault-agent.service
          Wants=postgres.service valkey.service

          [Container]
          Image=nextcloud.image
          Exec=php -f /var/www/html/cron.php
          LogDriver=journald

          EnvironmentFile=/etc/nextcloud/nextcloud.env

          Pod=nextcloud.pod

          [Service]
          Type=oneshot

          [Install]
          WantedBy=default.target
    - path: /etc/containers/systemd/postgres.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=PostgreSQL database
          After=network-online.target local-fs.target vault-agent.service

          [Container]
          Image=docker.io/library/postgres:${postgres_version}
          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          UserNS=auto
          Notify=healthy

          Environment=POSTGRES_PASSWORD_FILE=/secrets/password
          Environment=POSTGRES_USER_FILE=/secrets/user
          Environment=POSTGRES_DB_FILE=/secrets/db

          Volume=/var/containers/postgres/data:/var/lib/postgresql/data:Z,U
          Volume=/var/containers/secrets/nextcloud/postgres:/secrets:z,idmap,ro

          HealthCmd=pg_isready -d nextcloud -U nextcloud
          HealthInterval=30s
          HealthRetries=5
          HealthStartPeriod=20s
          HealthTimeout=5s

          Network=container.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/containers/systemd/valkey.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Valkey Cache
          After=network-online.target local-fs.target

          [Container]
          Image=docker.io/valkey/valkey:${valkey_version}

          Pull=newer
          LogDriver=journald
          UserNS=auto
          Notify=healthy

          Volume=/var/containers/valkey/data:/data:Z,U

          HealthCmd=valkey-cli ping | grep PONG
          HealthInterval=30s
          HealthRetries=5
          HealthStartPeriod=20s
          HealthTimeout=3s

          Network=container.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/vault-agent/config.d/nextcloud.hcl
      mode: 0644
      overwrite: true
      contents:
        inline: |
          template {
            contents = <<-EOT
              {{- with secret "kv/data/service/${ nextcloud_service_fqdn }/nextcloud" -}}
              {{ .Data.data.admin_password }}
              {{- end }}
              EOT
            perms = "0600"
            destination = "/vault/secrets/nextcloud/nextcloud_admin_password"
          }

          template {
            contents = <<-EOT
              {{- with secret "kv/data/service/${ nextcloud_service_fqdn }/postgres" -}}
              {{ .Data.data.password }}
              {{- end }}
              EOT
            perms = "0600"
            destination = "/vault/secrets/nextcloud/postgres/password"
          }

          # db and user have to be read from files too
          template {
            contents = "nextcloud"
            destination = "/vault/secrets/nextcloud/postgres/db"
          }

          template {
            contents = "nextcloud"
            destination = "/vault/secrets/nextcloud/postgres/user"
          }
    - path: /usr/local/bin/occ
      mode: 0755
      overwrite: true
      contents:
        inline: |
          #!/usr/bin/env sh
          CONTAINER_NAME=systemd-nextcloud-app
          COMMAND=/var/www/html/occ
          USER=33

          podman container exists $CONTAINER_NAME ||
              echo "Container $CONTAINER_NAME not found (must be run as root to access container)"
          # shellcheck disable=SC2086
          podman exec -it --user $USER $CONTAINER_NAME $COMMAND "$@"

systemd:
  units:
    - name: nextcloud-cron.timer
      enabled: true
      contents: |
        [Unit]
        Description=Run nextcloud cron
        After=nextcloud-app.service

        [Timer]
        OnBootSec=5min
        OnUnitActiveSec=5min

        [Install]
        WantedBy=timers.target
