# yaml-language-server: $schema=https://raw.githubusercontent.com/Relativ-IT/Butane-Schemas/Release/Butane-Schema.json
variant: fcos
version: "1.5.0"
storage:
  directories:
    - path: /etc/nextcloud
    - path: /etc/nextcloud/logs_stub
    - path: /var/containers/nextcloud/data
    - path: /var/containers/nextcloud/config
    - path: /var/containers/nextcloud/apps2
    - path: /var/containers/nextcloud/themes
    - path: /var/containers/nextcloud/session
    - path: /var/containers/postgres/data
    - path: /var/containers/valkey/data
    - path: /var/containers/secrets/nextcloud
    - path: /var/containers/secrets/postgres
  files:
    - path: /etc/nextcloud/nextcloud.env
      mode: 0644
      contents:
        inline: |
          NC_maintenance_window_start=2
          OVERWRITECLIURL=${nextcloud_service_fqdn}
          TZ='Europe/Berlin'

          UPLOAD_MAX_SIZE=${upload_limit}
          APC_SHM_SIZE=${php_apc_shm_size}
          OPCACHE_MEM_SIZE=${php_opcache_memory_size}
          MEMORY_LIMIT=${php_memory_limit}
          CRON_PERIOD=5
          CRON_MEMORY_LIMIT=1G
          PHP_HARDENING=true
    - path: /etc/nextcloud/custom.config.php
      mode: 0644
      contents:
        inline: |
          <?php
            $CONFIG = array (
              'apps_paths' => array (
                0 => array (
                  'path'     => '/nextcloud/apps',
                  'url'      => '/apps',
                  'writable' => false,
                ),
                1 => array (
                  'path'     => '/nextcloud/apps2',
                  'url'      => '/apps2',
                  'writable' => true,
                ),
              ),
              'upgrade.disable-web' => true,
              'trusted_domains' => [
                '${fqdn}',
                '${nextcloud_public_fqdn},
                '${nextcloud_service_fqdn}',
              ],
              'trusted_proxies' => ['0.0.0.0/0', '::/0'],

              'log_type' => 'syslog',
              'syslog_tag' => 'nextcloud',
              'logfile' => '',
              'loglevel' => 3,
              'log_type_audit' => 'syslog',
              'syslog_tag_audit' => 'nextcloud_audit',
              'logfile_audit' => '',

              'default_language' => '${default_language}',
              'default_locale' => '${default_locale}',
              'default_phone_region' => '${default_phone_region}',
              'default_timezone' => '${default_timezone}',
              'trashbin_retention_obligation' => 'auto, 90',
              'maintenance_window_start' => 3,

              'hide_login_form' => '${hide_login_form}',
              'lost_password_link' => '${lost_password_link}',
              'overwriteprotocol' => 'https',
              //'overwritehost' => '${nextcloud_public_fqdn}',
              'overwrite.cli.url' => '${nextcloud_service_fqdn}',

              'enabledPreviewProviders' => [
                  'OC\Preview\MP3',
                  'OC\Preview\TXT',
                  'OC\Preview\MarkDown',
                  'OC\Preview\OpenDocument',
                  'OC\Preview\Krita',
                  'OC\Preview\Imaginary',
              ],
              'preview_imaginary_url' => 'http://systemd-imaginary:9000/',
              'preview_format' => 'webp',

              'memcache.local' => '\OC\Memcache\APCu',
              'memcache.distributed' => '\OC\Memcache\Redis',
              'memcache.locking' => '\OC\Memcache\Redis',
              'redis' => array(
                'host' => 'systemd-valkey',
                'port' => 6379,
              ),

            );
    - path: /etc/containers/systemd/nextcloud.image
      mode: 0644
      contents:
        inline: |
          [Unit]
          Wants=network-online.target
          After=network-online.target

          [Image]
          Image=ghcr.io/hoellen/nextcloud:${nextcloud_version}
    - path: /etc/containers/systemd/nextcloud.pod
      mode: 0644
      contents:
        inline: |
          [Unit]
          Wants=postgres.service
          Wants=valkey.service

          [Pod]
          Network=container.network
          Network=clamav.network
          PodmanArgs=--userns=auto --exit-policy=continue

          Volume=/var/containers/nextcloud/data:/data:Z,U
          Volume=/var/containers/nextcloud/config:/nextcloud/config:Z,U
          Volume=/var/containers/nextcloud/apps2:/nextcloud/apps2:Z,U
          Volume=/var/containers/nextcloud/themes:/nextcloud/themes:Z,U
          Volume=/var/containers/nextcloud/session:/php/session:Z,U
          Volume=/etc/nextcloud/custom.config.php:/nextcloud/config/custom.config.php:z,idmap,ro

          # redirect logs to stdout/stderr by mounting symlinks
          Volume=/etc/nextcloud/logs_stub:/nginx/logs:Z,ro
          Volume=/etc/nextcloud/logs_stub:/php/logs:Z,ro

          # expose journald's syslog socket to containter for nextcloud logs
          Volume=/dev/log:/dev/log

          Network=container.network
          Network=clamav.network
    - path: /etc/containers/systemd/nextcloud.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=nextcloud app
          After=network-online.target local-fs.target vault-agent.service
          Wants=postgres.service valkey.service imaginary.service clamav.service nextcloud-install.service
          AssertPathExists=/var/containers/nextcloud/config/config.php

          [Container]
          Image=nextcloud.image
          Pull=newer
          LogDriver=journald

          EnvironmentFile=/etc/nextcloud/nextcloud.env

          Pod=nextcloud.pod

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target

    - path: /etc/containers/systemd/nextcloud-install.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=nextcloud installation
          After=network-online.target local-fs.target vault-agent.service postgres.service valkey.service
          Before=nextcloud.container
          Wants=postgres.service valkey.service
          ConditionPathExists=!/var/containers/nextcloud/config/config.php
          AssertPathExists=/var/containers/secrets/nextcloud/autoconfig.php

          [Container]
          Image=nextcloud.image
          LogDriver=journald

          Exec=php index.php
          WorkingDir=/nextcloud

          EnvironmentFile=/etc/nextcloud/nextcloud.env

          Pod=nextcloud.pod

          [Service]
          Type=oneshot
          ExecStartPre=cp /var/containers/secrets/nextcloud/autoconfig.php /var/containers/nextcloud/config/
          ExecStartPre=touch /var/containers/nextcloud/config/CAN_INSTALL

          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/containers/systemd/postgres.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=PostgreSQL database
          After=network-online.target local-fs.target vault-agent.service

          [Container]
          Image=docker.io/library/postgres:${postgres_version}
          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          UserNS=auto
          Notify=healthy

          Environment=POSTGRES_PASSWORD_FILE=/secrets/password
          Environment=POSTGRES_USER=nextcloud
          Environment=POSTGRES_DB=nextcloud

          Volume=/var/containers/postgres/data:/var/lib/postgresql/data:Z,U
          Volume=/var/containers/secrets/nextcloud/postgres:/secrets:z,idmap,ro

          HealthCmd=pg_isready -d nextcloud -U nextcloud
          HealthInterval=30s
          HealthRetries=5
          HealthStartPeriod=20s
          HealthTimeout=5s

          Network=container.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/containers/systemd/valkey.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Valkey Cache
          After=network-online.target local-fs.target

          [Container]
          Image=docker.io/valkey/valkey:${valkey_version}

          Pull=newer
          LogDriver=journald
          UserNS=auto
          Notify=healthy

          Volume=/var/containers/valkey/data:/data:Z,U

          HealthCmd=valkey-cli ping | grep PONG
          HealthInterval=30s
          HealthRetries=5
          HealthStartPeriod=20s
          HealthTimeout=3s

          Network=container.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/vault-agent/config.d/nextcloud.hcl
      mode: 0644
      overwrite: true
      contents:
        inline: |
          template {
            contents = <<-EOT
              {{- with secret "kv/data/service/${ nextcloud_service_fqdn }/postgres" -}}
              {{ .Data.data.password }}
              {{- end }}
              EOT
            perms = "0600"
            destination = "/vault/secrets/postgres/password"
          }

          template {
            contents = <<-EOT
              <?php
                $AUTOCONFIG = array (
                  'directory' => '/data',
                  'dbtype' => 'pgsql',
                  'dbhost' => 'systemd-postgres',
                  'dbname' => 'nextcloud',
                  'dbuser' => 'nextcloud',
                  'dbtableprefix' => '',
                  {{- with secret "kv/data/service/${ nextcloud_service_fqdn }/postgres" -}}
                  'dbpass' => '{{ .Data.data.password }}',
                  {{- end }}
                  {{- with secret "kv/data/service/${ nextcloud_service_fqdn }/admin" -}}
                  'adminlogin' => '{{ .Data.data.username }}',
                  'adminpass' => '{{ .Data.data.password }}',
                  {{- end }}
                );
              EOT
            perms = "0600"
            destination = "/vault/secrets/nextcloud/autoconfig.php"
          }
    - path: /usr/local/bin/occ
      mode: 0755
      overwrite: true
      contents:
        inline: |
          #!/usr/bin/env sh
          CONTAINER_NAME=systemd-nextcloud
          COMMAND=occ

          podman container exists $CONTAINER_NAME ||
              echo "Container $CONTAINER_NAME not found (must be run as root to access container)"
          # shellcheck disable=SC2086
          podman exec -it $CONTAINER_NAME $COMMAND "$@"
  links:
    - path: /etc/nextcloud/logs_stub/access.log
      target: /dev/stdout
    - path: /etc/nextcloud/logs_stub/error.log
      target: /dev/stderr
      overwrite: true
