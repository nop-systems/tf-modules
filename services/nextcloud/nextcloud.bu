# yaml-language-server: $schema=https://raw.githubusercontent.com/Relativ-IT/Butane-Schemas/Release/Butane-Schema.json
variant: fcos
version: "1.5.0"
storage:
  directories:
    - path: /etc/nextcloud
    - path: /etc/nextcloud/logs_stub
    - path: /etc/nextcloud/provision
    - path: /var/containers/nextcloud/data
    - path: /var/containers/nextcloud/config
    - path: /var/containers/nextcloud/apps2
    - path: /var/containers/nextcloud/themes
    - path: /var/containers/nextcloud/session
    - path: /var/containers/postgres/data
    - path: /var/containers/valkey/data
    - path: /var/containers/secrets/nextcloud
    - path: /var/containers/secrets/nextcloud/provision
    - path: /var/containers/secrets/postgres
    - path: /var/containers/backup/postgres
  files:
    - path: /etc/nextcloud/nextcloud.env
      mode: 0644
      contents:
        inline: |
          UPLOAD_MAX_SIZE=${upload_limit_bytes}
          APC_SHM_SIZE=${php_apc_shm_size}
          OPCACHE_MEM_SIZE=${php_opcache_memory_size}
          MEMORY_LIMIT=${php_memory_limit}
          PHP_HARDENING=true
          SSL_CERT_FILE=/host-tls-ca-bundle.pem
    - path: /etc/nextcloud/down
      mode: 0644
      contents:
        inline: ""
    - path: /etc/nextcloud/provision/config.json
      mode: 0644
      contents:
        inline: |
          {
            "system": {
              "upgrade.disable-web": true,
              "trusted_domains": [
                "${fqdn}",
                "${nextcloud_public_fqdn}",
                "${nextcloud_service_fqdn}"
              ],
              "trusted_proxies": ["0.0.0.0/0", "::/0"],

              "log_type": "syslog",
              "syslog_tag": "nextcloud",
              "logfile": "",
              "loglevel": 2,
              "log_type_audit": "syslog",
              "syslog_tag_audit": "nextcloud_audit",
              "logfile_audit": "",

              "default_language": "${default_language}",
              "default_locale": "${default_locale}",
              "default_phone_region": "${default_phone_region}",
              "default_timezone": "${default_timezone}",
              "trashbin_retention_obligation": "auto, 90",
              "maintenance_window_start": 3,

              "overwriteprotocol": "https",
              "overwrite.cli.url": "${nextcloud_public_fqdn}",

              "enabledPreviewProviders": [
                "OC\\Preview\\MP3",
                "OC\\Preview\\TXT",
                "OC\\Preview\\MarkDown",
                "OC\\Preview\\OpenDocument",
                "OC\\Preview\\Krita",
                "OC\\Preview\\Imaginary"
              ],
              "preview_imaginary_url": "http://systemd-imaginary:9000/",
              "preview_format": "webp",

              "memcache.local": "\\OC\\Memcache\\APCu",
              "memcache.distributed": "\\OC\\Memcache\\Redis",
              "memcache.locking": "\\OC\\Memcache\\Redis",

              "redis": {
                "host": "systemd-valkey",
                "port": 6379
              }
            },
            "apps": {
              "richdocuments": {
                "enabled": "yes",
                "types": "prevent_group_restriction",
                "wopi_url": "http://systemd-collabora:9980",
                "public_wopi_url": "${collabora_public_fqdn}"
              }
              "files_antivirus": {
                "enabled": "yes",
                "av_mode": "daemon",
                "av_host": "systemd-clamav",
                "av_port": "3310",
                "av_infected_action": "only_log",
                "av_stream_max_length": "${upload_limit_bytes}",
                "av_max_file_size": "-1",
                "av_scan_first_bytes": "-1",
                "types": "filesystem,dav"
              },
              "logreader": {
                "enabled": "no"
              }
            }
          }
    - path: /etc/nextcloud/provision/custom.json
      mode: 0600
      contents:
        inline: |
          ${config}
    - path: /etc/nextcloud/rw.config.php
      contents:
        inline: |
          <?php
          $CONFIG = array (
            'config_is_read_only' => false,
            'apps_paths' => array (
              0 => array (
                    'path'     => '/nextcloud/apps',
                    'url'      => '/apps',
                    'writable' => false,
              ),
              1 => array (
                    'path'     => '/nextcloud/apps2',
                    'url'      => '/apps2',
                    'writable' => true,
              ),
            ),
            'appstoreenabled' => true
          );
    - path: /etc/nextcloud/ro.config.php
      contents:
        inline: |
          <?php
          $CONFIG = array (
            'config_is_read_only' => 'true',
            'apps_paths' => array (
              0 => array (
                    'path'     => '/nextcloud/apps',
                    'url'      => '/apps',
                    'writable' => false,
              ),
              1 => array (
                    'path'     => '/nextcloud/apps2',
                    'url'      => '/apps2',
                    'writable' => false,
              ),
            ),
            'appstoreenabled' => false
          );
    - path: /etc/nextcloud/script-entrypoint.sh
      mode: 0755
      contents:
        inline: |
          #!/bin/sh
          set -eu

          # Apply environment variables settings
          # Adopted from container image to remove placeholders before running scripts
          # https://github.com/hoellen/docker-nextcloud/blob/master/rootfs/usr/local/bin/run.sh
          sed -i -e "s/<APC_SHM_SIZE>/$APC_SHM_SIZE/g" /usr/local/etc/php/conf.d/apcu.ini \
                 -e "s/<OPCACHE_MEM_SIZE>/$OPCACHE_MEM_SIZE/g" /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \
                 -e "s/<MEMORY_LIMIT>/$MEMORY_LIMIT/g" /usr/local/bin/occ \
                 -e "s/<MEMORY_LIMIT>/$MEMORY_LIMIT/g" /usr/local/etc/php-fpm.conf

          exec "$@"
    - path: /etc/nextcloud/provision/provision.sh
      mode: 0755
      contents:
        inline: |
          #!/bin/sh
          set -eu

          INSTALL_APPS="${apps}"

          occ() {
            php -d "memory_limit=$MEMORY_LIMIT" -f /nextcloud/occ -- "$@"
          }

          echo "→ Running occ upgrade…"
          occ upgrade

          echo "→ Check available app updates"
          occ app:update --showonly

          echo "→ Updating all apps…"
          occ app:update --all

          for app in $INSTALL_APPS; do
            # check if app already installed
            echo "→ Install app $app…"
            if ! occ app:getpath "$app" >/dev/null; then
              occ app:install "$app"
            else
              echo "  app already installed."
            fi
          done

          echo "→ Importing /provision/config.json…"
          occ config:import /provision/config.json
          echo "→ Importing /provision/custom.json…"
          occ config:import /provision/custom.json
          echo "→ Importing /provision/secrets/config.json…"
          occ config:import /provision/secrets/config.json
          echo "→ Importing /host-tls-ca-bundle.pem"
          occ security:certificates:import /host-tls-ca-bundle.pem

          echo "→ Addming missing"
          echo "→ Adding missing optional columns to the database tables"
          occ db:add-missing-columns
          echo "→ Adding missing indices to the database tables"
          occ db:add-missing-indices
          echo "→ Adding missing primary keys to the database tables"
          occ db:add-missing-primary-keys

          echo "→ Runnning maintenance:repair --include-expensive"
          occ maintenance:repair --include-expensive
          echo "→ Updating Mimetype DB"
          occ maintenance:mimetype:update-db
          echo "→ Updating Mimetype JS"
          occ maintenance:mimetype:update-js

          echo "→ Updating Theme"
          occ maintenance:theme:update
          echo "→ Installing Office Fonts"
          occ richdocuments:install-fonts

          echo "→ Running status"
          occ status
          echo "→ Running Setup Checks"
          occ setupchecks || true
          echo "→ Testing antivirus"
          occ files_antivirus:test || true

          echo "→ Finished provisioning!"
    - path: /etc/containers/systemd/nextcloud.image
      mode: 0644
      contents:
        inline: |
          [Unit]
          Wants=network-online.target
          After=network-online.target

          [Image]
          Image=ghcr.io/hoellen/nextcloud:${nextcloud_version}
    - path: /etc/containers/systemd/nextcloud.network
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Podman network nextcloud to talk to valkey and postgres
          [Network]
          IPv6=true
          #Subnet=
    - path: /etc/containers/systemd/nextcloud.pod
      mode: 0644
      contents:
        inline: |
          [Pod]
          PodmanArgs=--userns=auto --exit-policy=continue

          Network=container.network
          Network=nextcloud.network
          Network=collabora.network

          Volume=/var/containers/nextcloud/data:/data:Z,U
          Volume=/var/containers/secrets/tls/this/root_ca.pem:/host-tls-ca-bundle.pem:z,idmap,ro
          Volume=/etc/nextcloud/script-entrypoint.sh:/usr/local/bin/script-entrypoint.sh:Z,U,ro

          # redirect logs to stdout/stderr by mounting symlinks
          Volume=/etc/nextcloud/logs_stub:/nginx/logs:Z,ro
          Volume=/etc/nextcloud/logs_stub:/php/logs:Z,ro

          # expose journald's syslog socket to containter for nextcloud logs
          Volume=/dev/log:/dev/log

          # disable cron service
          Volume=/etc/nextcloud/down:/etc/s6.d/cron/down:Z,U,ro
    - path: /etc/containers/systemd/nextcloud.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=nextcloud app
          After=network-online.target local-fs.target vault-agent.service nextcloud-install.service nextcloud-provision.service
          Wants=postgres.service valkey.service imaginary.service clamav.service
          Requires=nextcloud-install.service nextcloud-provision.service

          [Container]
          Image=nextcloud.image
          Pull=newer
          LogDriver=journald

          # mount volumes readonly
          Volume=/var/containers/nextcloud/config:/nextcloud/config:Z,U,ro
          Volume=/var/containers/nextcloud/apps2:/nextcloud/apps2:Z,U,ro
          Volume=/var/containers/nextcloud/themes:/nextcloud/themes:Z,U,ro
          Volume=/etc/nextcloud/ro.config.php:/nextcloud/config:Z,U,ro

          Volume=/var/containers/nextcloud/session:/php/session:Z,U

          EnvironmentFile=/etc/nextcloud/nextcloud.env

          Pod=nextcloud.pod

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target

    - path: /etc/containers/systemd/nextcloud-install.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=nextcloud installation
          After=network-online.target local-fs.target vault-agent.service postgres.service valkey.service
          Before=nextcloud.service
          Wants=postgres.service valkey.service
          ConditionFileNotEmpty=!/var/containers/nextcloud/config/config.php

          [Container]
          Image=nextcloud.image
          LogDriver=journald

          Entrypoint=script-entrypoint.sh
          Exec=php index.php
          WorkingDir=/nextcloud

          Volume=/var/containers/nextcloud/config:/nextcloud/config:Z,U
          Volume=/var/containers/nextcloud/apps2:/nextcloud/apps2:Z,U
          Volume=/var/containers/nextcloud/themes:/nextcloud/themes:Z,U
          Volume=/etc/nextcloud/rw.config.php:/nextcloud/config:Z,U,ro

          EnvironmentFile=/etc/nextcloud/nextcloud.env

          Pod=nextcloud.pod

          [Service]
          Type=oneshot
          ExecStartPre=test -s /var/containers/secrets/nextcloud/autoconfig.php
          ExecStartPre=cp /var/containers/secrets/nextcloud/autoconfig.php /var/containers/nextcloud/config/
          ExecStartPre=touch /var/containers/nextcloud/config/CAN_INSTALL
          RemainAfterExit=true

          Restart=on-failure
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/containers/systemd/nextcloud-provision.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=nextcloud provisioning and update apps and config
          After=network-online.target local-fs.target vault-agent.service postgres.service valkey.service nextcloud-install.service
          Before=nextcloud.service
          Wants=postgres.service valkey.service

          [Container]
          Image=nextcloud.image
          LogDriver=journald

          Entrypoint=script-entrypoint.sh
          Exec=/provision/provision.sh
          WorkingDir=/nextcloud

          EnvironmentFile=/etc/nextcloud/nextcloud.env

          Volume=/var/containers/nextcloud/config:/nextcloud/config:Z,U
          Volume=/var/containers/nextcloud/apps2:/nextcloud/apps2:Z,U
          Volume=/var/containers/nextcloud/themes:/nextcloud/themes:Z,U
          Volume=/etc/nextcloud/rw.config.php:/nextcloud/config:Z,U,ro

          Volume=/etc/nextcloud/provision/:/provision:Z,U,ro
          Volume=/var/containers/secrets/nextcloud/provision/:/provision/secrets:Z,U,ro

          Pod=nextcloud.pod

          [Service]
          Type=oneshot
          RemainAfterExit=true

          ExecStartPre=sh -c 'podman exec systemd-postgres pg_dumpall -c -U nextcloud | zstd > /var/containers/backup/postgres/dump_`date +%%Y-%%m-%%d_%%H-%%M-%%S`.sql.zstd'
          ExecStartPre=find /var/containers/backup/postgres -maxdepth 1 -mtime +7 -type f -delete
          ExecStartPre=test -s /var/containers/secrets/nextcloud/provision/config.json

          Restart=on-failure
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/containers/systemd/nextcloud-cron.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=nextcloud cron

          [Container]
          Image=nextcloud.image
          LogDriver=journald

          Entrypoint=script-entrypoint.sh
          Exec=php -d memory_limit=1G -f cron.php
          WorkingDir=/nextcloud

          # mount volumes readonly
          Volume=/var/containers/nextcloud/config:/nextcloud/config:Z,U,ro
          Volume=/var/containers/nextcloud/apps2:/nextcloud/apps2:Z,U,ro
          Volume=/var/containers/nextcloud/themes:/nextcloud/themes:Z,U,ro
          Volume=/etc/nextcloud/ro.config.php:/nextcloud/config:Z,U,ro

          EnvironmentFile=/etc/nextcloud/nextcloud.env

          Pod=nextcloud.pod

          [Service]
          Type=oneshot

          Restart=on-failure
          RestartSec=1s
          RestartSteps=3
          RestartMaxDelaySec=30sec
    - path: /etc/containers/systemd/postgres.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=PostgreSQL database
          After=network-online.target local-fs.target vault-agent.service

          [Container]
          Image=docker.io/library/postgres:${postgres_version}
          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          UserNS=auto
          Notify=healthy

          Environment=POSTGRES_PASSWORD_FILE=/secrets/password
          Environment=POSTGRES_USER=nextcloud
          Environment=POSTGRES_DB=nextcloud

          Volume=/var/containers/postgres/data:/var/lib/postgresql/data:Z,U
          Volume=/var/containers/secrets/postgres:/secrets:z,idmap,ro

          HealthCmd=pg_isready -d nextcloud -U nextcloud
          HealthInterval=30s
          HealthRetries=5
          HealthStartPeriod=20s
          HealthTimeout=5s

          Network=nextcloud.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/containers/systemd/valkey.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Valkey Cache
          After=network-online.target local-fs.target

          [Container]
          Image=docker.io/valkey/valkey:${valkey_version}

          Pull=newer
          LogDriver=journald
          UserNS=auto
          Notify=healthy

          Volume=/var/containers/valkey/data:/data:Z,U

          HealthCmd=valkey-cli ping | grep PONG
          HealthInterval=30s
          HealthRetries=5
          HealthStartPeriod=20s
          HealthTimeout=3s

          Network=nextcloud.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/vault-agent/config.d/nextcloud.hcl
      mode: 0644
      overwrite: true
      contents:
        inline: |
          template {
            contents = <<-EOT
              {{- with secret "kv/data/service/${ nextcloud_service_fqdn }/postgres" -}}
              {{ .Data.data.password }}
              {{- end }}
              EOT
            perms = "0600"
            destination = "/vault/secrets/postgres/password"
          }

          template {
            contents = <<-EOT
              <?php
                $AUTOCONFIG = array (
                  'directory' => '/data',
                  'dbtype' => 'pgsql',
                  'dbhost' => 'systemd-postgres',
                  'dbname' => 'nextcloud',
                  'dbuser' => 'nextcloud',
                  'dbtableprefix' => '',
                  {{ with secret "kv/data/service/${ nextcloud_service_fqdn }/postgres" -}}
                  'dbpass' => '{{ .Data.data.password }}',
                  {{- end }}
                  {{ with secret "kv/data/service/${ nextcloud_service_fqdn }/admin" -}}
                  'adminlogin' => '{{ .Data.data.username }}',
                  'adminpass' => '{{ .Data.data.password }}',
                  {{- end }}
                );
              EOT
            perms = "0600"
            destination = "/vault/secrets/nextcloud/autoconfig.php"
          }

          template {
            contents = <<-EOT
              {{ with secret "kv/data/service/${ nextcloud_service_fqdn }/settings" -}}
              {
                "apps": {
                  "serverinfo": {
                    "token": "{{ .Data.data.serverinfo_token }}"
                  }
                }
              }
              {{- end }}
              EOT
            perms = "0600"
            destination = "/vault/secrets/nextcloud/provision/config.json"
          }

          template {
            contents = <<-EOT
              {{ with secret "kv/data/service/${ nextcloud_service_fqdn }/settings" -}}
              NEXTCLOUD_AUTH_TOKEN={{ .Data.data.serverinfo_token }}
              {{- end }}
              EOT
            perms = "0600"
            destination = "/vault/secrets/nextcloud/exporter.env"
          }
    - path: /etc/monitoring/alloy.d/nextcloud.alloy
      contents:
        inline: |
          prometheus.scrape "nextcloud" {
            forward_to = [
              prometheus.relabel.replace_instance.receiver,
            ]
            targets = [
              {
                "__address__" = "systemd-nextcloud-exporter:9205",
              },
            ]
          }

          prometheus.scrape "postgres" {
            forward_to = [
              prometheus.relabel.replace_instance.receiver,
            ]
            targets = [
              {
                "__address__" = "systemd-postgres-exporter:9187",
              },
            ]
          }
    - path: /etc/containers/systemd/nextcloud-exporter.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=nextcloud prometheus exporter
          After=network-online.target local-fs.target vault-agent.service nextcloud-install.service
          Wants=postgres.service valkey.service imaginary.service clamav.service nextcloud-install.service

          [Container]
          Image=ghcr.io/xperimental/nextcloud-exporter:latest
          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          UserNS=auto

          Environment=NEXTCLOUD_SERVER=http://systemd-nextcloud:8888
          Environment=NEXTCLOUD_INFO_APPS=anyvalue
          Environment=NEXTCLOUD_INFO_UPDATE=anyvalue
          EnvironmentFile=/var/secrets/nextcloud/exporter.env

          Network=container.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/containers/systemd/postgres-exporter.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=postgres prometheus exporter
          After=network-online.target local-fs.target vault-agent.service postgres.service
          Wants=vault-agent.service postgres.service

          [Container]
          Image=quay.io/prometheuscommunity/postgres-exporter:latest
          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          UserNS=auto

          Environment=DATA_SOURCE_USER=nextcloud
          Environment=DATA_SOURCE_PASS_FILE=/secrets/_password
          Environment=DATA_SOURCE_URI=systemd-postgres:5432/nextcloud?sslmode=disable

          Volume=/var/containers/secrets/postgres:/secrets:z,idmap,ro

          Network=container.network
          Network=nextcloud.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /usr/local/bin/occ
      mode: 0755
      contents:
        inline: |
          #!/usr/bin/env sh
          CONTAINER_NAME=systemd-nextcloud
          COMMAND=occ

          podman container exists $CONTAINER_NAME ||
              echo "Container $CONTAINER_NAME not found (must be run as root to access container)"
          # shellcheck disable=SC2086
          podman exec -it $CONTAINER_NAME $COMMAND -- "$@"
  links:
    - path: /etc/nextcloud/logs_stub/access.log
      target: /dev/stdout
    - path: /etc/nextcloud/logs_stub/error.log
      target: /dev/stderr
      overwrite: true
systemd:
  units:
    - name: nextcloud-cron.timer
      enabled: true
      contents: |
        [Unit]
        Description=Run nextcloud cron
        Wants=postgres.service valkey.service
        After=postgres.service valkey.service nextcloud-install.service nextcloud-provision.service

        [Timer]
        OnUnitActiveSec=5min
        Persistent=true

        [Install]
        WantedBy=timers.target
    - name: nextcloud-provision.timer
      enabled: true
      contents: |
        [Unit]
        Description=Rerun provision script to update all apps every night
        Wants=postgres.service valkey.service
        After=postgres.service valkey.service nextcloud-install.service
        Description=Run nextcloud cron
        [Timer]
        OnCalendar=*-*-* 04:00:00 UTC
        Persistent=true

        [Install]
        WantedBy=timers.target
