# yaml-language-server: $schema=https://raw.githubusercontent.com/Relativ-IT/Butane-Schemas/Release/Butane-Schema.json
variant: fcos
version: "1.5.0"
storage:
  directories:
    - path: /var/containers/clamav/db
    - path: /var/containers/secrets/authentik_ldap
  files:
    - path: /etc/containers/systemd/imaginary.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=HTTP microservice for high-level image processing
          After=network-online.target local-fs.target

          [Container]
          Image=docker.io/nextcloud/aio-imaginary:latest
          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          UserNS=auto:size=65536

          AddCapability=SYS_NICE

          Network=container.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/containers/systemd/clamav.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=ClamAV Anti-Virus Toolkit
          After=network-online.target local-fs.target

          [Container]
          Image=docker.io/nextcloud/aio-clamav:latest
          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          UserNS=auto

          # check hourly
          Environment=FRESHCLAM_CHECKS=24
          Environment=MAX_SIZE=${upload_limit_bytes}
          Volume=/var/containers/clamav/db:/var/lib/clamav/:Z,U

          Network=container.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/containers/systemd/clamav-exporter.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=clamav prometheus exporter
          After=network-online.target local-fs.target clamav.service
          Wants=clamav.service

          [Container]
          Image=docker.io/rekzi/clamav-prometheus-exporter:latest
          Exec=-clamav-address systemd-clamav
          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          UserNS=auto

          Network=container.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/monitoring/alloy.d/clamav.alloy
      contents:
        inline: |
          prometheus.scrape "clamav" {
            forward_to = [
              prometheus.relabel.replace_instance.receiver,
            ]
            targets = [
              {
                "__address__" = "systemd-clamav-exporter:9810",
              },
            ]
          }
    # - path: /etc/containers/systemd/authentik-ldap.container
    #   mode: 0644
    #   contents:
    #     inline: |
    #       [Unit]
    #       Description=authentik LDAP outpost
    #       After=network-online.target local-fs.target vault-agent.service

    #       [Container]
    #       Image=ghcr.io/goauthentik/ldap:${authentik_version}
    #       Pull=newer
    #       LogDriver=journald
    #       UserNS=auto
    #       Notify=healthy

    #       Environment=AUTHENTIK_HOST=${authentik_host}
    #       Environment=AUTHENTIK_INSECURE=false
    #       Environment=AUTHENTIK_TOKEN=file:///run/secrets/token

    #       Volume=/var/containers/secrets/authentik_ldap:/run/secrets:z,idmap=uids=@0-1000-1,ro
    #       Volume=/var/containers/secrets/tls/this/root_ca.pem:/etc/ssl/certs/root_ca.pem:ro

    #       Network=container.network

    #       HealthCmd=/ldap healthcheck
    #       HealthInterval=5s
    #       HealthRetries=20
    #       HealthStartPeriod=3s
    #       HealthTimeout=5s

    #       [Service]
    #       Restart=always
    #       RestartSec=1s
    #       RestartSteps=10
    #       RestartMaxDelaySec=5m

    #       [Install]
    #       WantedBy=default.target
    # - path: /etc/vault-agent/config.d/authentik-ldap.hcl
    #   mode: 0644
    #   overwrite: true
    #   contents:
    #     inline: |
    #       template {
    #         contents = <<-EOT
    #           {{- with secret "kv/data/service/${ nextcloud_service_fqdn }/authentik_ldap" -}}
    #           {{ .Data.data.token }}
    #           {{- end -}}
    #           EOT
    #         perms = "0600"
    #         destination = "/vault/secrets/authentik_ldap/token"
    #       }
    # - path: /etc/monitoring/alloy.d/authentik_ldap.alloy
    #   contents:
    #     inline: |
    #       prometheus.scrape "authentik_ldap" {
    #         forward_to = [
    #           prometheus.relabel.replace_instance.receiver,
    #         ]
    #         targets = [
    #           {
    #             "__address__" = "systemd-authentik-ldap:9300",
    #           },
    #         ]
    #       }
