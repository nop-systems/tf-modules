# yaml-language-server: $schema=https://raw.githubusercontent.com/Relativ-IT/Butane-Schemas/Release/Butane-Schema.json
variant: fcos
version: "1.5.0"
storage:
  directories:
    - path: /var/containers/dms
    - path: /var/containers/dms/mail-data
    - path: /var/containers/dms/mail-state
    - path: /var/containers/dms/mail-logs
    - path: /var/containers/dms/config
    - path: /var/containers/dms/config/rspamd/override.d/
    - path: /var/containers/dnsrobocert/cert
  files:
    - path: /etc/vault-agent/config.d/dms.hcl
      mode: 0644
      contents:
        inline: |
          template {
            contents = <<EOT
          {{ with secret "kv/data/service/${ service_fqdn }/ldap" }}
          LDAP_BIND_DN={{ .Data.data.bind_dn }}
          LDAP_BIND_PW={{ .Data.data.bind_pw }}
          {{ end }}
          EOT
            destination = "/vault/secrets/dms/ldapauth.env"
          }
    - path: /etc/vault-agent/config.d/dnsrobocert.hcl
      mode: 0644
      contents:
        inline: |
          template {
            contents = <<EOT
          {{ with secret "kv/data/service/${ service_fqdn }/cloudflare" }}
          draft: false
          acme:
            email_account: it@studis-bht.de
            staging: false
          profiles:
          - name: cloudflare_profile
            provider: cloudflare
            provider_options:
              auth_token: {{ .Data.data.api_token }}
              zone_id: ${ cloudflare_zone_id }
            ttl: 300 
            max_checks: 5
            sleep_time: 300
          certificates:
          - domains:
            - ${ mail_fqdn}
            profile: cloudflare_profile
          {{ end }}
          EOT
            destination = "/vault/secrets/dnsrobocert/config.yml"
          }
    - path: /etc/vault-agent/config.d/authentik-ldap.hcl
      mode: 0644
      overwrite: true
      contents:
        inline: |
          template {
            contents = "{{ with secret \"kv/data/service/${ service_fqdn }/authentik_ldap\" }}{{ .Data.data.token }}{{ end }}"
            destination = "/vault/secrets/authentik_ldap/token"
          }
    - path: /var/containers/dms/base.env
      mode: 0644
      contents:
        inline: |
          OVERRIDE_HOSTNAME=${ mail_fqdn }
          TZ=Europe/Berlin
          ENABLE_CLAMAV=1
          ENABLE_FAIL2BAN=1
          ENABLE_RSPAMD=1
          ENABLE_OPENDKIM=0
          ENABLE_OPENDMARC=0
          ENABLE_POLICYD_SPF=0
          ENABLE_AMAVIS=0
          ENABLE_SPAMASSASSIN=0
          ENABLE_OAUTH2=1
          SSL_TYPE=letsencrypt
    - path: /var/containers/dms/postfix.env
      mode: 0644
      contents:
        inline: |
          ACCOUNT_PROVISIONER=LDAP
          LDAP_SERVER_HOST=systemd-authentik-ldap
          LDAP_SEARCH_BASE=${ ldap_search_base }
          LDAP_QUERY_FILTER_DOMAIN=(|(inbox=*@%s)(inboxAlias=*@%s)(inboxGroupMember=*@%s))
          LDAP_QUERY_FILTER_USER=(&(objectClass=inetOrgPerson)(inbox=%s))
          LDAP_QUERY_FILTER_ALIAS=(&(objectClass=inetOrgPerson)(inboxAlias=%s))
          LDAP_QUERY_FILTER_GROUP=(&(objectClass=inetOrgPerson)(inboxGroupMember=%s))
          LDAP_QUERY_FILTER_SENDERS=(&(objectClass=inetOrgPerson)(|(mail=%s)(inboxAlias=%s)(inboxGroupMember=%s)))
          SPOOF_PROTECTION=1
    - path: /var/containers/dms/dovecot.env
      mode: 0644
      contents:
        inline: |
          DOVECOT_USER_FILTER=(&(objectClass=inetOrgPerson)(inbox=%u))
          DOVECOT_USER_ATTRS==home=/var/mail/%d/%%{ldap:cn},=mail=maildir:~/Maildir,uidNumber=uid,gidNumber=gid
          DOVECOT_AUTH_BIND=yes
    - path: /var/containers/dms/SASLAUTHD.env
      mode: 0644
      contents:
        inline: |
          ENABLE_SASLAUTHD=1
          SASLAUTHD_MECHANISMS=rimap
          SASLAUTHD_MECH_OPTIONS=127.0.0.1
    - path: /var/containers/dms/config/rspamd/override.d/dkim_signing.conf
      mode: 0644
      contents:
        inline: |
          # documentation: https://rspamd.com/doc/modules/dkim_signing.html

          enabled = true;

          sign_authenticated = true;
          sign_local = true;

          use_domain = "header";
          use_redis = false; # don't change unless Redis also provides the DKIM keys
          use_esld = true;
          use_vault = true;

          vault

    - path: /etc/containers/systemd/vault-agent.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=vault
          After=network-online.target local-fs.target
          [Container]
          Image=docker.io/hashicorp/vault:1.13
          Exec=agent -config=/vault/config/agent.hcl
          # should be replaced by LogDriver= when this is shipped
          PodmanArgs=--log-driver journald

          Volume=/var/containers/vault/secrets:/vault/secrets:z
          Volume=/var/containers/vault/config:/vault/config:Z

          AddCapability=IPC_LOCK

          Network=vault.network

          [Service]
          Restart=always

          [Install]
          WantedBy=multi-user.target default.target
    - path: /etc/containers/systemd/vault.network
      mode: 0644
      contents:
        inline: |
          [Network]
          IPv6=true
    - path: /etc/containers/systemd/docker-mailserver.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=dockerized mailserver
          After=network-online.target local-fs.target

          [Container]
          Image=ghcr.io/docker-mailserver/docker-mailserver:latest
          # should be replaced by LogDriver= when this is shipped
          PodmanArgs=--log-driver journald


          PublishPort=25:25
          PublishPort=143:143
          PublishPort=587:587
          PublishPort=993:993
          PublishPort=465:465
          PublishPort=11334:11334

          AddCapability=NET_ADMIN

          EnvironmentFile=/var/containers/vault/secrets/rendered/ldapauth.env
          EnvironmentFile=/var/containers/dms/base.env
          EnvironmentFile=/var/containers/dms/postfix.env
          EnvironmentFile=/var/containers/dms/dovecot.env
          EnvironmentFile=/var/containers/dms/SASLAUTHD.env

          Volume=/var/containers/dms/mail-data:/var/mail:Z
          Volume=/var/containers/dms/mail-state:/var/mail-state:Z
          Volume=/var/containers/dms/mail-logs:/var/log/mail:Z
          Volume=/var/containers/dms/config:/tmp/docker-mailserver:Z
          Volume=/var/containers/dnsrobocert/cert:/etc/letsencrypt:z

          Network=dms.network

          [Service]
          Restart=always

          [Install]
          WantedBy=multi-user.target default.target
    - path: /etc/containers/systemd/dnsrobocert.container
      mode: 0644
      contents: 
        inline: |
          [Unit]
          Description=DNS Robocert
          After=network-online.target local-fs.target

          [Container]
          Image=docker.io/adferrand/dnsrobocert:latest
          # should be replaced by LogDriver= when this is shipped
          PodmanArgs=--log-driver journald

          Volume=//var/containers/vault/secrets/rendered/dnsrobocert:/etc/dnsrobocert:z
          Volume=/var/containers/dnsrobocert/cert:/etc/letsencrypt:z

          Network=dms.network

          [Service]
          Restart=always

          [Install]
          WantedBy=multi-user.target default.target
    - path: /etc/containers/systemd/dms.network
      mode: 0644
      contents:
        inline: |
          [Network]
          IPv6=true
systemd:
  units:
    # Installing layered packages with rpm-ostree
    - name: rpm-ostree-install.service
      enabled: true
      contents: |
        [Unit]
        Description=Layer packages with rpm-ostree
        Wants=network-online.target
        After=network-online.target
        # We run before `zincati.service` to avoid conflicting rpm-ostree
        # transactions.
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        # `--allow-inactive` ensures that rpm-ostree does not return an error
        # if the package is already installed. This is useful if the package is
        # added to the root image in a future Fedora CoreOS release as it will
        # prevent the service from failing.
        ExecStart=/usr/bin/rpm-ostree install --apply-live --allow-inactive xe-guest-utilities-latest
        ExecStart=/bin/touch /var/lib/%N.stamp
        ExecStart=/bin/systemctl enable --now xe-linux-distribution.service

        [Install]
        WantedBy=multi-user.target
    - name: vault-unwrap-token.service
      enabled: true
      contents: |
        [Unit]
        Description=Unwrap token before startin vault agent
        Wants=network-online.target
        After=network-online.target
        Before=vault-agent.service
        ConditionPathExists=/var/containers/vault/secrets/wrapped_secretid

        [Service]
        Type=oneshot
        RemainAfterExit=true

        [Install]
        RequiredBy=vault-agent.service