# yaml-language-server: $schema=https://raw.githubusercontent.com/Relativ-IT/Butane-Schemas/Release/Butane-Schema.json
variant: fcos
version: "1.5.0"
passwd:
  users:
    - name: core
      ssh_authorized_keys: ${ssh_authorized_keys}
storage:
  directories:
    - path: /var/containers/stalwart
    - path: /var/containers/stalwart/etc
    - path: /var/containers/secrets/stalwart
    - path: /var/containers/secrets/authentik_ldap


  files:
    - path: /etc/containers/systemd/stalwart-mail.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Stalwart Mail Server
          After=network-online.target local-fs.target vault-agent.service
          Wants=authentik-ldap.service

          [Container]
          Image=${stalwart_image}
          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          # Notify=healthy
          UserNS=auto

          Volume=/var/containers/stalwart/data:/opt/stalwart-mail:Z,U

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /var/containers/stalwart/etc/config.toml
      mode: 0644
      contents:
        inline: |
          #############################################
          # Stalwart Mail Server Configuration File   
          #############################################

          [server]
          hostname = "${mail_domain}"

          [server.listener."smtp"]
          bind = ["[::]:25"]
          protocol = "smtp"

          [server.listener."submissions"]
          bind = ["[::]:465"]
          protocol = "smtp"
          tls.implicit = true

          [server.listener."imaptls"]
          bind = ["[::]:993"]
          protocol = "imap"
          tls.implicit = true

          [server.listener."sieve"]
          bind = ["[::]:4190"]
          protocol = "managesieve"

          [server.listener."https"]
          protocol = "http"
          bind = ["[::]:443"]
          use-x-forwarded = false
          hsts = false
          tls.implicit = true

          [server.listener."https".proxy]
          trusted-networks = ["127.0.0.0/8", "::1", "${trusted_proxies}"]

          [storage]
          data = "rocksdb"
          fts = "rocksdb"
          blob = "rocksdb"
          lookup = "rocksdb"
          directory = "authentik"

          [store."rocksdb"]
          type = "rocksdb"
          path = "/opt/stalwart-mail/data"
          compression = "lz4"

          [storage.full-text]
          default-language = "de"

          [directory."ldap"]
          type = "ldap"
          url = "ldap://localhost:3893"
          base-dn = "dc=example,dc=org"
          timeout = "30s"

          [directory."ldap".tls]
          enable = false
          allow-invalid-certs = false

          [directory."ldap".bind]
          dn = "cn=admin,dc=example,dc=org"
          secret = "password"

          [directory."ldap".filter]
          name = "(&(|(objectClass=posixAccount)(objectClass=posixGroup))(uid=?))"
          email = "(&(|(objectClass=posixAccount)(objectClass=posixGroup))(|(mail=?)(mailAlias=?)))"

          [directory."ldap".attributes]
          name = "uid"
          class = "objectClass"
          description = ["principalName", "description"]
          secret = "userPassword"
          groups = ["memberOf", "otherGroups"]
          email = "mail"
          email-alias = "mailAlias"
          quota = "diskQuota"

          [directory."authentik"]
          type = "oidc"
          timeout = "1s"
          endpoint.url = "https://accounts.example.org/userinfo"
          endpoint.method = "userinfo"
          fields.email = "email"
          fields.username = "preferred_username"
          fields.full-name = "name"

          [tracer."stdout"]
          type = "stdout"
          level = "info"
          ansi = false
          enable = true

          [authentication.fallback-admin]
          user = "admin"
          secret = "%{env:ADMIN_SECRET}%"

          [acme."letsencrypt"]
          directory = "https://acme-v02.api.letsencrypt.org/directory"
          challenge = "dns-01"
          provider = "cloudflare"
          secret = "%{env:CLOUDFLARE_SECRET}%"
          contact = ["postmaster@%{DEFAULT_DOMAIN}%"]
          domains = ["${mail_domain}"]
          cache = "%{BASE_PATH}%/etc/acme"
          renew-before = "30d"

          [session.extensions]
          pipelining = true
          chunking = true
          requiretls = true
          no-soliciting = ""
          dsn = [ { if = "!is_empty(authenticated_as)", then = true},
                  { else = false } ]
          future-release = [ { if = "!is_empty(authenticated_as)", then = "7d"},
                            { else = false } ]
          deliver-by = [ { if = "!is_empty(authenticated_as)", then = "15d"},
                        { else = false } ]
          mt-priority = [ { if = "!is_empty(authenticated_as)", then = "mixer"},
                          { else = false } ]
          vrfy = [ { if = "!is_empty(authenticated_as)", then = true},
                          { else = false } ]
          expn = [ { if = "!is_empty(authenticated_as)", then = true},
                          { else = false } ]            

          [session.rcpt]
          directory = "ldap"   
          subaddressing = true

          [queue.outbound]
          ip-strategy = "ipv6_then_ipv4"

    - path: /etc/containers/systemd/authentik-ldap-outpost.image
      mode: 0644
      contents:
        inline: |
          [Unit]
          Wants=network-online.target
          After=network-online.target

          [Image]
          Image=ghcr.io/goauthentik/ldap:${authentik_version}
    - path: /etc/containers/systemd/authentik-ldap.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=authentik LDAP outpost
          After=network-online.target local-fs.target vault-agent.service

          [Container]
          Image=authentik-ldap-outpost.image
          Pull=newer
          LogDriver=journald

          # metrics
          PublishPort=9300:9300

          Environment=AUTHENTIK_HOST=${authentik_host}
          Environment=AUTHENTIK_INSECURE=false
          Environment=AUTHENTIK_TOKEN=file:///secrets/token

          Volume=/var/containers/secrets/authentik_ldap:/secrets:z,idmap
          Volume=/var/containers/secrets/tls/this/root_ca.pem:/etc/ssl/certs/root_ca.pem:z,idmap,ro

          Network=container.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Service]
          Restart=always

          [Install]
          WantedBy=multi-user.target default.target
    - path: /etc/monitoring/alloy.d/engelsystem.alloy
      contents:
        inline: |
          prometheus.scrape "engelsystem" {
            forward_to = [
              prometheus.relabel.replace_instance.receiver,
            ]
            scheme = "http"
            targets = [
              {
                "__address__" = "systemd-es-server:5080",
              },
            ]
            # metrics_path = "/metrics"
            # basic_auth {
            #   username = "pretix"
            #   password_file = "/secrets/pretix_password"
            # }
          }
