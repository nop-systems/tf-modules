# yaml-language-server: $schema=https://raw.githubusercontent.com/Relativ-IT/Butane-Schemas/Release/Butane-Schema.json
variant: fcos
version: "1.5.0"
passwd:
  users:
    - name: core
      ssh_authorized_keys: ${ssh_authorized_keys}
storage:
  directories:
    - path: /var/containers/mariadb/data
    - path: /var/containers/secrets/engelsystem
    - path: /var/containers/secrets/mariadb

  files:
    - path: /etc/containers/systemd/engelsystem.network
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Podman network for engelsystem to talk to mariadb
          [Network]
          IPv6=true
          #Subnet=

    - path: /etc/containers/systemd/es-server.build
      mode: 0644
      contents:
        inline: |
          [Build]
          # Tag the image to be built
          ImageTag=localhost/es_server
          SetWorkingDirectory=${es_release}
          File=docker/Dockerfile
          
    - path: /etc/containers/systemd/es-server.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Enegelsystem volunteer management
          After=network-online.target local-fs.target vault-agent.service
          Wants=mariadb.service

          [Container]
          Image=es-server.build
          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          # Notify=healthy
          UserNS=auto

          # HealthCmd="wget --no-verbose --tries=1 --spider http://localhost/healthcheck || exit 1"
          # HealthInterval=10s
          # HealthRetries=5
          # HealthStartPeriod=20s
          # HealthTimeout=5s

          
          Environment=MYSQL_HOST=systemd-mariadb
          Environment=MYSQL_USER=engelsystem
          Environment=MYSQL_DATABASE=engelsystem
          
          EnvironmentFile=/etc/containers/secrets/engelsystem/es_server.env
          Environment=CONTACT_EMAIL=${contact_email}
          Environment=MAIL_DRIVER=smtp
          Environment=MAIL_FROM_ADDRESS=${contact_email}
          Environment=FIRSTNAME_REQUIRED=true
          Environment=LASTNAME_REQUIRED=true
          Environment=TSHIRT_SIZE_REQUIRED=false
          Environment=ENABLE_DECT=false
          Environment=ENABLE_USER_NAME=true
          Environment=DISPLAY_FULL_NAME=true
          Environment=ENABLE_PLANNED_ARRIVAL=false

          Network=engelsystem.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/containers/systemd/mariadb.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=MariaDB database
          After=network-online.target local-fs.target vault-agent.service

          [Container]
          Image=${mariadb_image}
          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          UserNS=auto
          Notify=healthy

          Environment=MARIADB_RANDOM_ROOT_PASSWORD
          Environment=MARIADB_PASSWORD_FILE=/run/secrets/password
          Environment=MARIADB_USER=engelsystem
          Environment=MARIADB_DATABASE=engelsystem

          Volume=/var/containers/mariadb/data:/var/lib/mysql:Z,U
          Volume=/var/containers/secrets/mariadb:/run/secrets:z,idmap,ro

          HealthCmd=healthcheck.sh --connect --innodb_initialized
          HealthInterval=1m
          HealthRetries=5
          HealthStartPeriod=1m
          HealthTimeout=5s

          Network=engelsystem.network

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=default.target
    - path: /etc/containers/systemd/monitoring.pod.d/engelsystem.conf
      contents:
        inline: |
          [Pod]
          Network=engelsystem.network
    - path: /etc/vault-agent/config.d/engelsystem.hcl
      mode: 0644
      overwrite: true
      contents:
        inline: |
          template {
            destination = "/vault/secrets/mariadb/password"
            perms = "0600"
            contents = <<-EOT
              {{- with secret "kv/data/service/${ service_fqdn }/mariadb" -}}
              {{ .Data.data.password }}
              {{- end }}
              EOT
          }

          template {
            destination = "/vault/secrets/engelsystem/es_server.env"
            # perms = "0644"
            contents = <<-EOT
              {{- with secret "kv/data/service/${ service_fqdn }/engelsystem" -}}
              SETUP_ADMIN_PASSWORD={{ .Data.data.password }}
              # API_KEY={{ .Data.data.api_key }}
              {{- end }}
              {{- with secret "kv/data/service/${ service_fqdn }/smtp" -}}
              MAIL_HOST={{ .Data.data.host }}
              MAIL_USERNAME={{ .Data.data.username }}
              MAIL_PASSWORD={{ .Data.data.password }}
              MAIL_PORT={{ .Data.data.port }}
              MAIL_TLS=true
              EOT
              
          }

          # template {
          #   contents = <<-EOT
          #     {{- with secret "kv/data/service/${ service_fqdn }/engelsystem" -}}
          #     {{ .Data.data.api_key }}
          #     {{- end }}
          #     EOT
          #   destination = "/vault/secrets/monitoring/es_apikey"
          # }
    - path: /etc/monitoring/alloy.d/engelsystem.alloy
      contents:
        inline: |
          prometheus.scrape "engelsystem" {
            forward_to = [
              prometheus.relabel.replace_instance.receiver,
            ]
            scheme = "http"
            targets = [
              {
                "__address__" = "systemd-es-server:5080",
              },
            ]
            # metrics_path = "/metrics"
            # basic_auth {
            #   username = "pretix"
            #   password_file = "/secrets/pretix_password"
            # }
          }
