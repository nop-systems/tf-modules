# yaml-language-server: $schema=https://raw.githubusercontent.com/Relativ-IT/Butane-Schemas/Release/Butane-Schema.json
variant: fcos
version: "1.5.0"
storage:
  directories:
    - path: /var/containers/zammad/storage
    - path: /var/containers/postgres/data
    - path: /var/containers/redis/data
    - path: /var/containers/elasticsearch/data
    - path: /var/containers/secrets/zammad
    - path: /var/containers/caddy/data
    - path: /var/containers/caddy/config
  files:
    - path: /etc/sysctl
    - path: /etc/containers/systemd/zammad.image
      mode: 0644
      contents:
        inline: |
          [Unit]
          Wants=network-online.target
          After=network-online.target

          [Image]
          Image=ghcr.io/zammad/zammad:6.3.1-50
    - path: /etc/containers/systemd/zammad.pod
      mode: 0644
      contents:
        inline: |
          [Unit]
          Wants=postgres.service
          Wants=redis.service
          Wants=memcached.service
          Wants=elasticsearch.service

          [Pod]
          Network=container.network
          PodmanArgs=--userns=auto --exit-policy=continue

          Volume=/var/containers/zammad/storage:/opt/zammad/storage:Z,U

          PublishPort=443:9443
    - path: /var/containers/zammad/zammad.env
      mode: 0644
      contents:
        inline: |
          POSTGRES_HOST=systemd-postgres
          POSTGRES_PORT=5432
          MEMCACHED_SERVERS=systemd-memcached:11211
          REDIS_URL=redis://systemd-redis:6379
          ELASTICSEARCH_HOST=systemd-elasticsearch
          BACKUP_DIR=/var/tmp/zammad
          BACKUP_TIME=03:00
          HOLD_DAYS=10
          TZ=Europe/Berlin
    - path: /etc/containers/systemd/zammad-railsserver.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=zammad railsserver
          After=network-online.target local-fs.target vault-agent.service
          Wants=postgres.service
          Wants=redis.service
          Wants=memcached.service
          Wants=elasticsearch.service

          [Container]
          Image=zammad.image
          Exec=zammad-railserver
          Pull=newer
          LogDriver=journald

          EnvironmentFile=/var/containers/zammad/zammad.env
          EnvironmentFile=/var/containers/secrets/zammad/postgres.env

          Pod=zammad.pod

          [Service]
          Restart=always
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=multi-user.target default.target
    - path: /etc/containers/systemd/zammad-init.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=zammad init
          After=network-online.target local-fs.target vault-agent.service
          Requires=postgres.service

          [Container]
          Image=zammad.image
          Exec=zammad-init
          Pull=newer
          LogDriver=journald
          Type=oneshot
          User=0
          Group=0

          EnvironmentFile=/var/containers/zammad/zammad.env
          EnvironmentFile=/var/containers/secrets/zammad/postgres.env

          Pod=zammad.pod

          [Service]
          Restart=on-failure
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=multi-user.target default.target
    - path: /etc/containers/systemd/zammad-backup.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=zammad backup
          After=network-online.target local-fs.target vault-agent.service

          [Container]
          Image=zammad.image
          Exec=zammad-backup
          Pull=newer
          LogDriver=journald
          User=0
          Group=0

          EnvironmentFile=/var/containers/zammad/zammad.env
          EnvironmentFile=/var/containers/secrets/zammad/postgres.env
          Volume=/var/containers/zammad/backup:/var/tmp/zammad:Z,U
          Volume=/var/containers/zammad/storage:/opt/zammad/storage:ro

          Pod=zammad.pod

          [Service]
          Restart=on-failure
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=multi-user.target default.target
    - path: /etc/containers/systemd/zammad-scheduler.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=zammad scheduler
          After=network-online.target local-fs.target vault-agent.service

          [Container]
          Image=zammad.image
          Exec=zammad-scheduler
          Pull=newer
          LogDriver=journald
          User=0
          Group=0

          EnvironmentFile=/var/containers/zammad/zammad.env
          EnvironmentFile=/var/containers/secrets/zammad/postgres.env

          Pod=zammad.pod

          [Service]
          Restart=on-failure
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=multi-user.target default.target
    - path: /etc/containers/systemd/zammad-websocket.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=zammad websocket
          After=network-online.target local-fs.target vault-agent.service

          [Container]
          Image=zammad.image
          Exec=zammad-websocket
          Pull=newer
          LogDriver=journald
          User=0
          Group=0

          EnvironmentFile=/var/containers/zammad/zammad.env
          EnvironmentFile=/var/containers/secrets/zammad/postgres.env

          Pod=zammad.pod

          [Service]
          Restart=on-failure
          RestartSec=1s
          RestartSteps=10
          RestartMaxDelaySec=5m

          [Install]
          WantedBy=multi-user.target default.target
    - path: /etc/containers/systemd/zammad-image.volume
      mode: 0644
      contents:
        inline: |
          [Volume]
          Driver=image
          Image=zammad.image
    - path: /etc/containers/systemd/caddy.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Reverse Proxy
          After=network-online.target local-fs.target

          [Container]
          Image=docker.io/library/caddy:2.8
          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          UserNS=auto

          PublishPort=443:443
          PublishPort=443:443/udp

          Volume=/var/containers/caddy/config:/config:Z,U
          Volume=/var/containers/caddy/data:/data:Z,U
          Volume=/var/containers/caddy/Caddyfile:/etc/caddy/Caddyfile:Z,ro
          Volume=zammad-image.volume:/zammad:ro

          Pod=zammad.pod

          [Service]
          Restart=always

          [Install]
          WantedBy=multi-user.target default.target
    - path: /var/containers/caddy/Caddyfile
      mode: 0644
      contents:
        inline: |
          {
            acme_ca ${acme_ca}
            auto_https disable_redirects
            servers {
              trusted_proxies static ${trusted_proxies}
            }
          }

          https://${fqdn}, https://${service_fqdn}, https:// {
            handle_errors {
              respond "Error {err.status_code} {err.status_text} on ${fqdn}"
            }

            @static path /assets/* /robots.txt /humans.txt /favicon.ico /apple-touch-icon.png

            file_server @static {
              root /zammad/opt/zammad/public
            }

            reverse_proxy /ws http://zammad-websocket:6042 {
              stream_timeout 24h
            }

            reverse_proxy /cable https://zammad-railsserver:3000 {
              stream_timeout 24h
            }

            reverse_proxy https://zammad-railsserver:3000 {
            }
          }

    - path: /etc/containers/systemd/elasticsearch.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Elasticsearch
          After=network-online.target local-fs.target

          [Container]
          Image=docker.io/bitnami/elasticsearch:8.14.1
          Pull=newer
          LogDriver=journald
          UserNS=auto

          Volume=/var/containers/elasticsearch/data:/bitnami/elasticsearch/data:Z,U

          Network=container.network

          [Service]
          Restart=always

          [Install]
          WantedBy=multi-user.target default.target
    - path: /etc/containers/systemd/postgres.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=PostgreSQL database
          After=network-online.target local-fs.target vault-agent.service

          [Container]
          Image=docker.io/library/postgres:16-alpine
          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          UserNS=auto
          Notify=healthy

          EnvironmentFile=/var/containers/secrets/zammad/postgres.env

          Volume=/var/containers/postgres/data:/var/lib/postgresql/data:Z,U

          HealthCmd=pg_isready -d zammad -U zammad
          HealthInterval=30s
          HealthRetries=5
          HealthStartPeriod=20s
          HealthTimeout=5s

          Network=container.network

          [Service]
          Restart=always

          [Install]
          WantedBy=multi-user.target default.target
    - path: /etc/containers/systemd/redis.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Redis Cache
          After=network-online.target local-fs.target

          [Container]
          Image=docker.io/library/redis:7.2.5-alpine

          Pull=newer
          LogDriver=journald
          UserNS=auto
          Notify=healthy

          Volume=/var/containers/redis/data:/data:Z,U

          HealthCmd=redis-cli ping | grep PONG
          HealthInterval=30s
          HealthRetries=5
          HealthStartPeriod=20s
          HealthTimeout=3s

          Network=container.network

          [Service]
          Restart=always

          [Install]
          WantedBy=multi-user.target default.target
    - path: /etc/containers/systemd/memcached.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Memcached
          After=network-online.target local-fs.target

          [Container]
          Image=docker.io/library/memcached:1.6.28-alpine
          Exec=memcached -m 256M

          Pull=newer
          AutoUpdate=registry
          LogDriver=journald
          UserNS=auto

          Network=container.network

          [Service]
          Restart=always

          [Install]
          WantedBy=multi-user.target default.target

    - path: /var/containers/vault-agent/config.d/zammad.hcl
      contents:
        inline: |
          template {
            contents = <<-EOT
              {{ with secret "kv/data/service/${ service_fqdn }/postgres" -}}
              POSTGRES_PASS={{ .Data.data.password }}
              POSTGRES_USER=zammad
              POSTGRES_DB=zammad
              {{- end }}
            EOT
            destination = "/vault/secrets/zammad/postgres.env"
          }
